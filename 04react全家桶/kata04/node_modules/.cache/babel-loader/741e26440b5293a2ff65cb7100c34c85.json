{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Web/react/react-study/04react\\u5168\\u5BB6\\u6876/kata04/src/components/CommentList.js\";\nimport React, { Component } from 'react';\nexport default class CommentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: []\n    };\n    setInterval(() => {\n      this.setState({\n        comments: [{\n          body: \"react is very good\",\n          author: \"facebook\"\n        }, {\n          body: \"vue is very good\",\n          author: \"youyuxi\"\n        }]\n      });\n    }, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.state.comments.map((c, i) => React.createElement(Comment, {\n      key: i,\n      data: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Comment extends Component {\n  shouldComponentUpdate({\n    data: {\n      body,\n      author\n    }\n  }) {\n    if (body === this.props.data.body && author === this.props.data.author) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.data.body), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.props.data.author));\n  }\n\n} // const Comment = React.memo(function({ body, author }) {  \n//     return (\n//       <div>\n//         <p>{body}</p>\n//         <p> --- {author}</p>\n//       </div>\n//     )\n//   })","map":{"version":3,"sources":["/Users/mac/Desktop/Web/react/react-study/04react全家桶/kata04/src/components/CommentList.js"],"names":["React","Component","CommentList","constructor","props","state","comments","setInterval","setState","body","author","render","map","c","i","Comment","shouldComponentUpdate","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAC/CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGAC,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKC,QAAL,CAAc;AACVF,QAAAA,QAAQ,EAAE,CACR;AAAEG,UAAAA,IAAI,EAAE,oBAAR;AAA8BC,UAAAA,MAAM,EAAE;AAAtC,SADQ,EAER;AAAED,UAAAA,IAAI,EAAE,kBAAR;AAA4BC,UAAAA,MAAM,EAAE;AAApC,SAFQ;AADA,OAAd;AAMH,KAPU,EAOR,IAPQ,CAAX;AAQH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,GAApB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KACrB,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,CAAd;AAAiB,MAAA,IAAI,EAAED,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ;AAOH;;AAxB8C;;AA2BnD,MAAME,OAAN,SAAsBd,SAAtB,CAAgC;AAC5Be,EAAAA,qBAAqB,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAACR,MAAAA,IAAD;AAAOC,MAAAA;AAAP;AAAR,GAAD,EAA0B;AAC3C,QAAID,IAAI,KAAK,KAAKL,KAAL,CAAWa,IAAX,CAAgBR,IAAzB,IAAiCC,MAAM,KAAK,KAAKN,KAAL,CAAWa,IAAX,CAAgBP,MAAhE,EAAwE;AACpE,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKP,KAAL,CAAWa,IAAX,CAAgBR,IAArB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKL,KAAL,CAAWa,IAAX,CAAgBP,MAArB,CAFJ,CADJ;AAMH;;AAf2B,C,CAkBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\n\nexport default class CommentList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            comments: []\n        }\n        setInterval(() => {\n            this.setState({\n                comments: [\n                  { body: \"react is very good\", author: \"facebook\" },\n                  { body: \"vue is very good\", author: \"youyuxi\" }\n                ]\n            })\n        }, 1000)\n    }\n    \n    render() {\n        return(\n            <div>\n                {this.state.comments.map((c, i) => (\n                    <Comment key={i} data={c} />\n                ))}\n            </div>\n        )\n    }\n}\n\nclass Comment extends Component {\n    shouldComponentUpdate({ data: {body, author}}) {\n        if (body === this.props.data.body && author === this.props.data.author) {\n            return false;\n        }\n        return true;\n    }\n\n    render() {\n        return (\n            <div>\n                <p>{ this.props.data.body }</p>\n                <p>{ this.props.data.author }</p>\n            </div>\n        )\n    }\n}\n\n// const Comment = React.memo(function({ body, author }) {  \n//     return (\n//       <div>\n//         <p>{body}</p>\n//         <p> --- {author}</p>\n//       </div>\n//     )\n//   })"]},"metadata":{},"sourceType":"module"}